$date
	Sun Mar  7 19:32:20 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module instruction_fetch_tb $end
$var wire 1 ! mode_mem $end
$var wire 1 " rd $end
$var wire 1 # wn $end
$var wire 16 $ write_data1 [15:0] $end
$var wire 16 % write_data2 [15:0] $end
$var wire 16 & write_data_mem [15:0] $end
$var wire 1 ' wr_mem $end
$var wire 1 ( wn_reg2 $end
$var wire 1 ) wn_reg1 $end
$var wire 4 * reg_id2 [3:0] $end
$var wire 4 + reg_id1 [3:0] $end
$var wire 16 , reg_data2 [15:0] $end
$var wire 16 - reg_data1 [15:0] $end
$var wire 1 . rd_reg2 $end
$var wire 1 / rd_reg1 $end
$var wire 1 0 rd_mem $end
$var wire 6 1 opcode [5:0] $end
$var wire 16 2 op2 [15:0] $end
$var wire 16 3 op1 [15:0] $end
$var wire 2 4 mode [1:0] $end
$var wire 16 5 mem_data [15:0] $end
$var wire 16 6 address [15:0] $end
$var reg 1 7 clk $end
$var reg 24 8 instruction [23:0] $end
$var reg 1 9 reset $end
$scope module data_memory $end
$var wire 1 7 clk $end
$var wire 1 ! mode $end
$var wire 16 : write_data [15:0] $end
$var wire 1 ' wn $end
$var wire 16 ; read_data [15:0] $end
$var wire 1 0 rd $end
$var wire 16 < address [15:0] $end
$var integer 32 = i [31:0] $end
$upscope $end
$scope module instruction_decode $end
$var wire 1 7 clk $end
$var wire 24 > instruction [23:0] $end
$var wire 16 ? mem_data [15:0] $end
$var wire 16 @ op1 [15:0] $end
$var wire 1 ( wr_en_reg2 $end
$var wire 1 ) wr_en_reg1 $end
$var wire 1 ' wr_en_mem $end
$var wire 4 A reg_id2 [3:0] $end
$var wire 4 B reg_id1 [3:0] $end
$var wire 16 C reg_data2 [15:0] $end
$var wire 16 D reg_data1 [15:0] $end
$var wire 1 . rd_en_reg2 $end
$var wire 1 / rd_en_reg1 $end
$var wire 1 0 rd_en_mem $end
$var wire 6 E opcode [5:0] $end
$var wire 16 F op2 [15:0] $end
$var wire 2 G mode [1:0] $end
$var wire 16 H mem_addr [15:0] $end
$var reg 16 I mem_addr_temp [15:0] $end
$var reg 1 0 rd_en_mem_temp $end
$var reg 1 / rd_en_reg1_temp $end
$var reg 1 . rd_en_reg2_temp $end
$var reg 4 J reg_id1_temp [3:0] $end
$var reg 4 K reg_id2_temp [3:0] $end
$var reg 1 ' wr_en_mem_temp $end
$var reg 1 ) wr_en_reg1_temp $end
$var reg 1 ( wr_en_reg2_temp $end
$upscope $end
$scope module register $end
$var wire 1 7 clk $end
$var wire 1 / rd1 $end
$var wire 1 . rd2 $end
$var wire 4 L reg_id1 [3:0] $end
$var wire 4 M reg_id2 [3:0] $end
$var wire 1 9 reset $end
$var wire 1 ) wn1 $end
$var wire 1 ( wn2 $end
$var wire 16 N write_data1 [15:0] $end
$var wire 16 O write_data2 [15:0] $end
$var wire 16 P read_data2 [15:0] $end
$var wire 16 Q read_data1 [15:0] $end
$var integer 32 R i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10000 R
bx Q
bx P
bz O
bz N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
b10000 =
bx <
bx ;
bz :
x9
bx 8
07
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
x0
x/
x.
bx -
bx ,
bx +
bx *
x)
x(
x'
bz &
bz %
bz $
0#
1"
z!
$end
#10
0)
1/
17
#20
07
#30
17
#40
07
#50
17
#60
07
#70
17
#80
07
#90
17
#100
b0 1
b0 E
b0 4
b0 G
b11000000000100 8
b11000000000100 >
07
#110
b101 2
b101 F
b101 ,
b101 C
b101 P
b1000 3
b1000 @
b1000 -
b1000 D
b1000 Q
b0 *
b0 A
b0 K
b0 M
0(
1.
b11 +
b11 B
b11 J
b11 L
17
#120
bx 2
bx F
b100 1
b100 E
b1 4
b1 G
b100010011000000000110 8
b100010011000000000110 >
07
#130
b11100001000 2
b11100001000 F
b11100001000 5
b11100001000 ;
b11100001000 ?
b110 6
b110 <
b110 H
b110 I
0'
10
17
#140
b100 2
b100 F
b1 1
b1 E
b10 4
b10 G
b1100011000000000100 8
b1100011000000000100 >
07
#150
17
#160
b110 2
b110 F
b100 1
b100 E
b100100011000000000110 8
b100100011000000000110 >
07
#170
17
#180
07
#190
17
#200
07
#210
17
#220
07
#230
17
#240
07
#250
17
#260
07
#270
17
#280
07
#290
17
#300
07
#310
17
#320
07
#330
17
#340
07
#350
17
#360
07
#370
17
#380
07
#390
17
#400
07
#410
17
#420
07
#430
17
#440
07
#450
17
#460
07
#470
17
#480
07
#490
17
#500
07
#510
17
#520
07
#530
17
#540
07
#550
17
#560
07
#570
17
#580
07
#590
17
#600
07
#610
17
#620
07
#630
17
#640
07
#650
17
#660
07
#670
17
#680
07
#690
17
#700
07
#710
17
#720
07
#730
17
#740
07
#750
17
#760
07
#770
17
#780
07
#790
17
#800
07
#810
17
#820
07
#830
17
#840
07
#850
17
#860
07
#870
17
#880
07
#890
17
#900
07
#910
17
#920
07
#930
17
#940
07
#950
17
#960
07
#970
17
#980
07
#990
17
#1000
07
#1010
17
#1020
07
#1030
17
#1040
07
#1050
17
#1060
07
#1070
17
#1080
07
#1090
17
#1100
07
#1110
17
#1120
07
#1130
17
#1140
07
#1150
17
#1160
07
#1170
17
#1180
07
